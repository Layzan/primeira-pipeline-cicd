name: CI-CD
on: 
  push:
    branches: ["main"]
  workflow_dispatch:
jobs:
  CI:
    runs-on: ubuntu-latest
    steps:
    - name: Obtendo o código
      uses: actions/checkout@v4.1.5
    - name: Autenticação no Docker Hub
      uses: docker/login-action@v3.1.0
      with:
        username: ${{ secrets.DOCKERHUB_USERNAME }}
        password: ${{ secrets.DOCKERHUB_TOKEN }}
    - name: Build da Imagem Docker
      uses: docker/build-push-action@v5.3.0
      with:
        context: ./src
        file: ./src/Dockerfile
        push: true
        tags: | 
          layzan/aula-primeira-pipeline:v${{ github.run_number }} 
          layzan/aula-primeira-pipeline:latest 
  CD:
    runs-on: ubuntu-latest
    needs: [CI]
    steps: 
    - name: Obtendo o código
      uses: actions/checkout@v4.1.5
    - name: Autenticando no DigitalOcean
      uses: digitalocean/action-doctl@v2
      with:
        token: ${{ secrets.DO_API_TOKEN }}
    - name: Configurar Kubernetes
      run: doctl kubernetes cluster kubeconfig save ${{ secrets.DO_CLUSTER_NAME }} --expiry-seconds 600
    - name: Verificar nodes
      run: kubectl get nodes
    - name: Aplicar manifesto Kubernetes
      run: |
        # Atualizar a imagem no deployment
        sed -i "s|layzan/primeira-pipeline-cicd|layzan/aula-primeira-pipeline:v${{ github.run_number }}|g" ./k8s/deployment.yaml
        
        # Aplicar o deployment
        kubectl apply -f ./k8s/deployment.yaml
        
        # Verificar o status
        kubectl get pods
        kubectl get services